// src/app/contexts/LanguageContext.tsx
import React, { createContext, useContext, useState, ReactNode } from 'react';

export interface Language {
  code: string;
  name: string;
  nativeName: string;
  flag: string;
}

export const languages: Language[] = [
  { code: 'en', name: 'English', nativeName: 'English', flag: 'üá∫üá∏' },
  { code: 'mn', name: 'Mongolian', nativeName: '–ú–æ–Ω–≥–æ–ª —Ö—ç–ª', flag: 'üá≤üá≥' },
  { code: 'ja', name: 'Japanese', nativeName: 'Êó•Êú¨Ë™û', flag: 'üáØüáµ' },
];

export interface Translations {
  [key: string]: {
    [key: string]: string;
  };
}export const translations: Translations = {
  en: {
    welcome: 'Welcome back, {name}!',
    dashboardSubtitle: 'Here\'s what\'s happening with your competitions today.',
    activeCompetitions: 'Active Competitions',
    totalJudges: 'Total Judges',
    submissionsToday: 'Submissions Today',
    averageScore: 'Average Score',
    noCompetitions: 'No competitions available.',
    selectLanguage: 'Select Language',
    retry: 'Retry',
    comingSoon: 'More dashboard features coming soon!',
    participants: 'Participants',
    judges: 'Judges',
    ends: 'Ends',
    back: 'Back',
    judgePanel: 'Judge Panel',
    welcomeJudge: 'Welcome Judge, {name}!',
    competition: 'Competition',
    upcoming: 'Upcoming',
    timeTBD: 'Time TBD',
    noPerformance: 'No Performance',
    scoring: 'Scoring',
    totalScore: 'Total Score',
    criteria_criteria1: 'Criteria 1',
    criteria_criteria2: 'Criteria 2',
    criteria_criteria3: 'Criteria 3',
    weight: 'Weight: {value}',
    scoreLabel: 'Score',
    poor: 'Poor',
    average: 'Average',
    excellent: 'Excellent',
    commentsLabel: 'Comments',
    commentPlaceholder: 'Add a comment for {criteria}',
    clearScores: 'Clear Scores',
    submitScores: 'Submit Scores',
    leaderboard: "Leaderboard",
    realTimeCompetitionResults: "Real-time competition results",
    live: "LIVE",
    refresh: "Refresh",
    selectEvent: "Select Event",
    progress: "Progress",
    completed: "Completed",
    totalTeams: "Total Teams",
    judged: "Judged",
    hackathon2023Rankings: "Hackathon 2023 Rankings",
    devSprint2025Rankings: "DevSprint 2025 Rankings",
    aiChallenge2024Rankings: "AI Challenge 2024 Rankings",
    team: "Team",
    performance: "Performance",
    waitingForMoreTeams: "Waiting for {count} more teams to be judged...",
    unknown: "Unknown",
    failedFetchCompetitions: "Failed to fetch competitions: {status}",
    failedFetchScoreboard: "Failed to fetch scoreboard: {status}",
    invalidResponseFormat: "Invalid response format",
    noCompetitionsAvailable: "No competitions available",
    noScoresAvailable: "No scores available",
    errorTitle: "Error",
    unknownError: "An unknown error occurred",
    backToDashboard: "Back to Dashboard",
    competitionManagement: "Competition Management",
    manageExistingCompetitions: "Manage existing competitions",
    allCompetitions: "All Competitions",
    createCompetition: "Create Competition",
    hackathon2023: "Hackathon 2023",
    annualCodingCompetition: "Annual coding competition",
    devSprint2025: "DevSprint 2025",
    rapidSoftwareDevContest: "24-hour rapid software dev contest",
    aiChallenge2024: "AI Challenge 2024",
    buildInnovativeAIModels: "Build innovative AI models",
    viewDetails: "View Details",
    backToList: "Back to List",
    createNewCompetition: "Create New Competition",
    competitionName: "Competition Name",
    status: "Status",
    description: "Description",
    startDate: "Start Date",
    endDate: "End Date",
    judgingCriteria: "Judging Criteria",
    addCriteria: "Add Criteria",
    criterionName: "Criterion Name",
    addParticipant: "Add Participant",
    addJudge: "Add Judge",
    judgeName: "Judge Name",
    judgeEmail: "Judge Email",
    totalWeight: "Total Weight: {value}%",
    totalMustBe100: "Total must be 100%",
    noCompetitionsYet: "No competitions yet",
    getStartedCreateCompetition: "Get started by creating a new competition",
    accessDenied: "Access Denied",
    onlyAdmins: "Only admins can access this page",
    invalidInput: "Invalid Input",
    competitionNameRequired: "Competition name is required",
    invalidCriteria: "Invalid Criteria",
    criteriaNameWeightRequired: "Each criterion must have a name and a weight greater than 0",
    totalWeightMustBe100: "Total weight of criteria must be 100%",
    invalidDates: "Invalid Dates",
    startDateBeforeEndDate: "Start date must be before end date",
    validDatesRequired: "Please provide valid start and end dates",
    participantNameRequired: "Participant name is required",
    judgeNameEmailRequired: "Judge name and email are required",
    invalidEmail: "Please enter a valid email address",
    cannotRemove: "Cannot Remove",
    atLeastOneCriterion: "At least one criterion is required",
    success: "Success",
    competitionCreated: "Competition created successfully!",
    competitionDeleted: "Competition deleted successfully!",
    error: "Error",
    couldNotCreateCompetition: "Could not create competition",
    couldNotDeleteCompetition: "Could not delete competition",
    confirmDelete: "Are you sure you want to delete this competition?",
    unnamedCompetition: "Unnamed Competition",
    unnamedParticipant: "Unnamed Participant",
    unnamedJudge: "Unnamed Judge",
    noDescription: "No description provided",
    enterCompetitionName: "Enter competition name",
    enterDescription: "Enter competition description",
    enterParticipantName: "Enter participant name",
    enterJudgeName: "Enter judge name",
    enterJudgeEmail: "Enter judge email",
    enterCriterionName: "Enter criterion name",
    dashboard: "Dashboard",
    judge: "Judge",
    scoreboard: "Scoreboard",
    competitions: "Competitions",
    profile: "Profile",
    logout: "Logout",
    toggleMenu: "Toggle Menu",
    closeMenu: "Close Menu",
    openMenu: "Open Menu",
    profileImageAlt: "Profile Image",
    logoAlt: "JudgeHub Logo",
    roleAdmin: "Admin",
    roleJudge: "Judge",
    roleViewer: "Viewer",
    unknownUser: "Unknown User",
    unknownRole: "Unknown Role",
    login: "Login",
  },
  mn: {
    welcome: '–¢–∞–≤—Ç–∞–π –º–æ—Ä–∏–ª, {name}!',
    dashboardSubtitle: '–¢–∞–Ω—ã ”©—Ä—Å”©–ª–¥”©”©–Ω–∏–π —Ç–∞–ª–∞–∞—Ä—Ö ”©–Ω”©”©–¥—Ä–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª —ç–Ω–¥ –±–∞–π–Ω–∞.',
    activeCompetitions: '–ò–¥—ç–≤—Ö—Ç—ç–π —Ç—ç–º—Ü—ç—ç–Ω“Ø“Ø–¥',
    totalJudges: '–ù–∏–π—Ç —à“Ø“Ø–≥—á–∏–¥',
    submissionsToday: '”®–Ω”©”©–¥—Ä–∏–π–Ω ”©—Ä–≥”©–¥”©–ª',
    averageScore: '–î—É–Ω–¥–∞–∂ –æ–Ω–æ–æ',
    noCompetitions: '–¢—ç–º—Ü—ç—ç–Ω –±–∞–π—Ö–≥“Ø–π –±–∞–π–Ω–∞.',
    selectLanguage: '–•—ç–ª —Å–æ–Ω–≥–æ—Ö',
    retry: '–î–∞—Ö–∏–Ω –æ—Ä–æ–ª–¥–æ—Ö',
    comingSoon: '–£–¥–∞—Ö–≥“Ø–π –∏–ª“Ø“Ø –æ–ª–æ–Ω –±–æ–ª–æ–º–∂—É—É–¥ –Ω—ç–º—ç–≥–¥—ç–Ω—ç!',
    participants: '–û—Ä–æ–ª—Ü–æ–≥—á–∏–¥',
    judges: '–®“Ø“Ø–≥—á–∏–¥',
    ends: '–î—É—É—Å–∞—Ö',
    back: '–ë—É—Ü–∞—Ö',
    judgePanel: '–®“Ø“Ø–≥—á–∏–π–Ω –•—è–Ω–∞–ª—Ç—ã–Ω –°–∞–º–±–∞—Ä',
    welcomeJudge: '–¢–∞–≤—Ç–∞–π –º–æ—Ä–∏–ª, –®“Ø“Ø–≥—á {name}!',
    competition: '–¢—ç–º—Ü—ç—ç–Ω',
    upcoming: '–£–¥–∞—Ö–≥“Ø–π –±–æ–ª–æ—Ö',
    timeTBD: '–¶–∞–≥ —Ç–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π',
    noPerformance: '–ì“Ø–π—Ü—ç—Ç–≥—ç–ª –±–∞–π—Ö–≥“Ø–π',
    scoring: '–û–Ω–æ–æ ”©–≥”©—Ö',
    totalScore: '–ù–∏–π—Ç –û–Ω–æ–æ',
    criteria_criteria1: '–®–∞–ª–≥—É—É—Ä 1',
    criteria_criteria2: '–®–∞–ª–≥—É—É—Ä 2',
    criteria_criteria3: '–®–∞–ª–≥—É—É—Ä 3',
    weight: '–ñ–∏–Ω: {value}',
    scoreLabel: '–û–Ω–æ–æ',
    poor: '–ú—É—É',
    average: '–î—É–Ω–¥–∞–∂',
    excellent: '–ú–∞—à —Å–∞–π–Ω',
    commentsLabel: '–°—ç—Ç–≥—ç–≥–¥—ç–ª',
    commentPlaceholder: '{criteria}-–¥ –∑–æ—Ä–∏—É–ª—Å–∞–Ω —Å—ç—Ç–≥—ç–≥–¥—ç–ª –Ω—ç–º–Ω—ç “Ø“Ø',
    clearScores: '–û–Ω–æ–æ–≥ –ê—Ä–∏–ª–≥–∞—Ö',
    submitScores: '–û–Ω–æ–æ–≥ –ò–ª–≥—ç—ç—Ö',
    leaderboard: "–û–Ω–æ–æ–Ω—ã –°–∞–º–±–∞—Ä",
    realTimeCompetitionResults: "–ë–æ–¥–∏—Ç —Ü–∞–≥–∏–π–Ω —Ç—ç–º—Ü—ç—ç–Ω–∏–π “Ø—Ä –¥“Ø–Ω",
    live: "–®–£–£–î",
    refresh: "–°—ç—Ä–≥—ç—ç—Ö",
    selectEvent: "–ê—Ä–≥–∞ —Ö—ç–º–∂—ç—ç —Å–æ–Ω–≥–æ—Ö",
    progress: "–ê—Ö–∏—Ü",
    completed: "–î—É—É—Å—Å–∞–Ω",
    totalTeams: "–ù–∏–π—Ç –ë–∞–≥—É—É–¥",
    judged: "–®“Ø“Ø–≥–¥—Å—ç–Ω",
    hackathon2023Rankings: "–•–∞–∫–∞—Ç–æ–Ω 2023-—ã–Ω –ó—ç—Ä—ç–≥–ª—ç–ª",
    devSprint2025Rankings: "–î–µ–≤–°–ø—Ä–∏–Ω—Ç 2025-—ã–Ω –ó—ç—Ä—ç–≥–ª—ç–ª",
    aiChallenge2024Rankings: "AI-–∏–π–Ω –°–æ—Ä–∏–ª—Ç 2024-—ã–Ω –ó—ç—Ä—ç–≥–ª—ç–ª",
    team: "–ë–∞–≥",
    performance: "–ì“Ø–π—Ü—ç—Ç–≥—ç–ª",
    waitingForMoreTeams: "{count} –±–∞–≥—ã–≥ —à“Ø“Ø—Ö—ã–≥ —Ö“Ø–ª—ç—ç–∂ –±–∞–π–Ω–∞...",
    unknown: "–¢–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π",
    failedFetchCompetitions: "–¢—ç–º—Ü—ç—ç–Ω“Ø“Ø–¥–∏–π–≥ —Ç–∞—Ç–∞–∂ –∞–≤–∂ —á–∞–¥—Å–∞–Ω–≥“Ø–π: {status}",
    failedFetchScoreboard: "–û–Ω–æ–æ–Ω—ã —Å–∞–º–±–∞—Ä—ã–≥ —Ç–∞—Ç–∞–∂ –∞–≤–∂ —á–∞–¥—Å–∞–Ω–≥“Ø–π: {status}",
    invalidResponseFormat: "–•“Ø—á–∏–Ω–≥“Ø–π —Ö–∞—Ä–∏—É–Ω—ã —Ñ–æ—Ä–º–∞—Ç",
    noCompetitionsAvailable: "–¢—ç–º—Ü—ç—ç–Ω –±–∞–π—Ö–≥“Ø–π –±–∞–π–Ω–∞",
    noScoresAvailable: "–û–Ω–æ–æ –±–∞–π—Ö–≥“Ø–π –±–∞–π–Ω–∞",
    errorTitle: "–ê–ª–¥–∞–∞",
    unknownError: "–¢–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞",
    backToDashboard: "–•—è–Ω–∞–ª—Ç—ã–Ω —Å–∞–º–±–∞—Ä—Ç –±—É—Ü–∞—Ö",
    competitionManagement: "–¢—ç–º—Ü—ç—ç–Ω–∏–π –£–¥–∏—Ä–¥–ª–∞–≥–∞",
    manageExistingCompetitions: "–û–¥–æ–æ –±–∞–π–≥–∞–∞ —Ç—ç–º—Ü—ç—ç–Ω“Ø“Ø–¥–∏–π–≥ —É–¥–∏—Ä–¥–∞—Ö",
    allCompetitions: "–ë“Ø—Ö –¢—ç–º—Ü—ç—ç–Ω“Ø“Ø–¥",
    createCompetition: "–¢—ç–º—Ü—ç—ç–Ω “Æ“Ø—Å–≥—ç—Ö",
    hackathon2023: "–•–∞–∫–∞—Ç–æ–Ω 2023",
    annualCodingCompetition: "–ñ–∏–ª –±“Ø—Ä –±–æ–ª–¥–æ–≥ –∫–æ–¥—ã–Ω —Ç—ç–º—Ü—ç—ç–Ω",
    devSprint2025: "–î–µ–≤–°–ø—Ä–∏–Ω—Ç 2025",
    rapidSoftwareDevContest: "24 —Ü–∞–≥–∏–π–Ω —Ö—É—Ä–¥–∞–Ω –ø—Ä–æ–≥—Ä–∞–º–º —Ö”©–≥–∂“Ø“Ø–ª—ç–ª—Ç–∏–π–Ω —Ç—ç–º—Ü—ç—ç–Ω",
    aiChallenge2024: "AI-–∏–π–Ω –°–æ—Ä–∏–ª—Ç 2024",
    buildInnovativeAIModels: "–®–∏–Ω—ç–ª—ç–≥ AI –∑–∞–≥–≤–∞—Ä—É—É–¥ –±–∏–π –±–æ–ª–≥–æ—Ö",
    viewDetails: "–î—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π —Ö–∞—Ä–∞—Ö",
    backToList: "–ñ–∞–≥—Å–∞–∞–ª—Ç —Ä—É—É –±—É—Ü–∞—Ö",
    createNewCompetition: "–®–∏–Ω—ç –¢—ç–º—Ü—ç—ç–Ω “Æ“Ø—Å–≥—ç—Ö",
    competitionName: "–¢—ç–º—Ü—ç—ç–Ω–∏–π –ù—ç—Ä",
    status: "–°—Ç–∞—Ç—É—Å",
    description: "–¢–∞–π–ª–±–∞—Ä",
    startDate: "–≠—Ö–ª—ç—Ö –û–≥–Ω–æ–æ",
    endDate: "–î—É—É—Å–∞—Ö –û–≥–Ω–æ–æ",
    judgingCriteria: "–®“Ø“Ø—Ö–∏–π–Ω –®–∞–ª–≥—É—É—Ä",
    addCriteria: "–®–∞–ª–≥—É—É—Ä –ù—ç–º—ç—Ö",
    criterionName: "–®–∞–ª–≥—É—É—Ä—ã–Ω –ù—ç—Ä",
    addParticipant: "–û—Ä–æ–ª—Ü–æ–≥—á –ù—ç–º—ç—Ö",
    addJudge: "–®“Ø“Ø–≥—á –ù—ç–º—ç—Ö",
    judgeName: "–®“Ø“Ø–≥—á–∏–π–Ω –ù—ç—Ä",
    judgeEmail: "–®“Ø“Ø–≥—á–∏–π–Ω –ò–º—ç–π–ª",
    totalWeight: "–ù–∏–π—Ç –ñ–∏–Ω: {value}%",
    totalMustBe100: "–ù–∏–π—Ç 100% –±–∞–π—Ö —ë—Å—Ç–æ–π",
    noCompetitionsYet: "–û–¥–æ–æ–≥–æ–æ—Ä —Ç—ç–º—Ü—ç—ç–Ω –±–∞–π—Ö–≥“Ø–π",
    getStartedCreateCompetition: "–®–∏–Ω—ç —Ç—ç–º—Ü—ç—ç–Ω “Ø“Ø—Å–≥—ç–∂ —ç—Ö—ç–ª–Ω—ç “Ø“Ø",
    accessDenied: "–•–∞–Ω–¥–∞–ª—Ç –•–æ—Ä–∏–≥–ª–æ–≥–¥—Å–æ–Ω",
    onlyAdmins: "–ó”©–≤—Ö”©–Ω –∞–¥–º–∏–Ω—É—É–¥ —ç–Ω—ç —Ö—É—É–¥—Å–∞–Ω–¥ —Ö–∞–Ω–¥–∞—Ö –±–æ–ª–æ–º–∂—Ç–æ–π",
    invalidInput: "–•“Ø—á–∏–Ω–≥“Ø–π –û—Ä–æ–ª—Ç",
    competitionNameRequired: "–¢—ç–º—Ü—ç—ç–Ω–∏–π –Ω—ç—Ä —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π",
    invalidCriteria: "–•“Ø—á–∏–Ω–≥“Ø–π –®–∞–ª–≥—É—É—Ä",
    criteriaNameWeightRequired: "–®–∞–ª–≥—É—É—Ä –±“Ø—Ä –Ω—ç—Ä –±–æ–ª–æ–Ω 0-—ç—ç—Å –∏—Ö –∂–∏–Ω—Ç—ç–π –±–∞–π—Ö —ë—Å—Ç–æ–π",
    totalWeightMustBe100: "–®–∞–ª–≥—É—É—Ä—ã–Ω –Ω–∏–π—Ç –∂–∏–Ω 100% –±–∞–π—Ö —ë—Å—Ç–æ–π",
    invalidDates: "–•“Ø—á–∏–Ω–≥“Ø–π –û–≥–Ω–æ–æ",
    startDateBeforeEndDate: "–≠—Ö–ª—ç—Ö –æ–≥–Ω–æ–æ –¥—É—É—Å–∞—Ö –æ–≥–Ω–æ–æ–Ω–æ–æ—Å ”©–º–Ω”© –±–∞–π—Ö —ë—Å—Ç–æ–π",
    validDatesRequired: "–•“Ø—á–∏–Ω—Ç—ç–π —ç—Ö–ª—ç—Ö –±–æ–ª–æ–Ω –¥—É—É—Å–∞—Ö –æ–≥–Ω–æ–æ –æ—Ä—É—É–ª–Ω–∞ —É—É",
    participantNameRequired: "–û—Ä–æ–ª—Ü–æ–≥—á–∏–π–Ω –Ω—ç—Ä —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π",
    judgeNameEmailRequired: "–®“Ø“Ø–≥—á–∏–π–Ω –Ω—ç—Ä –±–æ–ª–æ–Ω –∏–º—ç–π–ª —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π",
    invalidEmail: "–•“Ø—á–∏–Ω—Ç—ç–π –∏–º—ç–π–ª —Ö–∞—è–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É",
    cannotRemove: "–£—Å—Ç–≥–∞—Ö –±–æ–ª–æ–º–∂–≥“Ø–π",
    atLeastOneCriterion: "–•–∞–º–≥–∏–π–Ω –±–∞–≥–∞–¥–∞–∞ –Ω—ç–≥ —à–∞–ª–≥—É—É—Ä —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π",
    success: "–ê–º–∂–∏–ª—Ç—Ç–∞–π",
    competitionCreated: "–¢—ç–º—Ü—ç—ç–Ω –∞–º–∂–∏–ª—Ç—Ç–∞–π “Ø“Ø—Å–≥—ç–≥–¥–ª—ç—ç!",
    competitionDeleted: "–¢—ç–º—Ü—ç—ç–Ω –∞–º–∂–∏–ª—Ç—Ç–∞–π —É—Å—Ç–≥–∞–≥–¥–ª–∞–∞!",
    error: "–ê–ª–¥–∞–∞",
    couldNotCreateCompetition: "–¢—ç–º—Ü—ç—ç–Ω “Ø“Ø—Å–≥—ç–∂ —á–∞–¥—Å–∞–Ω–≥“Ø–π",
    couldNotDeleteCompetition: "–¢—ç–º—Ü—ç—ç–Ω —É—Å—Ç–≥–∞–∂ —á–∞–¥—Å–∞–Ω–≥“Ø–π",
    confirmDelete: "–¢–∞ —ç–Ω—ç —Ç—ç–º—Ü—ç—ç–Ω–∏–π–≥ —É—Å—Ç–≥–∞—Ö–¥–∞–∞ –∏—Ç–≥—ç–ª—Ç—ç–π –±–∞–π–Ω–∞ —É—É?",
    unnamedCompetition: "–ù—ç—Ä–≥“Ø–π –¢—ç–º—Ü—ç—ç–Ω",
    unnamedParticipant: "–ù—ç—Ä–≥“Ø–π –û—Ä–æ–ª—Ü–æ–≥—á",
    unnamedJudge: "–ù—ç—Ä–≥“Ø–π –®“Ø“Ø–≥—á",
    noDescription: "–¢–∞–π–ª–±–∞—Ä –±–∞–π—Ö–≥“Ø–π",
    enterCompetitionName: "–¢—ç–º—Ü—ç—ç–Ω–∏–π –Ω—ç—Ä –æ—Ä—É—É–ª–Ω–∞ —É—É",
    enterDescription: "–¢—ç–º—Ü—ç—ç–Ω–∏–π —Ç–∞–π–ª–±–∞—Ä –æ—Ä—É—É–ª–Ω–∞ —É—É",
    enterParticipantName: "–û—Ä–æ–ª—Ü–æ–≥—á–∏–π–Ω –Ω—ç—Ä –æ—Ä—É—É–ª–Ω–∞ —É—É",
    enterJudgeName: "–®“Ø“Ø–≥—á–∏–π–Ω –Ω—ç—Ä –æ—Ä—É—É–ª–Ω–∞ —É—É",
    enterJudgeEmail: "–®“Ø“Ø–≥—á–∏–π–Ω –∏–º—ç–π–ª –æ—Ä—É—É–ª–Ω–∞ —É—É",
    enterCriterionName: "–®–∞–ª–≥—É—É—Ä—ã–Ω –Ω—ç—Ä –æ—Ä—É—É–ª–Ω–∞ —É—É",
    deleteCompetition: "–¢—ç–º—Ü—ç—ç–Ω —É—Å—Ç–≥–∞—Ö",
    dashboard: "–•—è–Ω–∞–ª—Ç—ã–Ω –°–∞–º–±–∞—Ä",
    judge: "–®“Ø“Ø–≥—á",
    scoreboard: "–û–Ω–æ–æ–Ω—ã –°–∞–º–±–∞—Ä",
    competitions: "–¢—ç–º—Ü—ç—ç–Ω“Ø“Ø–¥",
    profile: "–ü—Ä–æ—Ñ–∞–π–ª",
    logout: "–ì–∞—Ä–∞—Ö",
    toggleMenu: "–¶—ç—Å–∏–π–≥ –•–∞—Ä—É—É–ª–∞—Ö/–ù—É—É—Ö",
    closeMenu: "–¶—ç—Å–∏–π–≥ –•–∞–∞—Ö",
    openMenu: "–¶—ç—Å–∏–π–≥ –ù—ç—ç—Ö",
    profileImageAlt: "–ü—Ä–æ—Ñ–∞–π–ª—ã–Ω –ó—É—Ä–∞–≥",
    logoAlt: "–®“Ø“Ø–≥—á–•–∞–±—ã–Ω –õ–æ–≥–æ",
    roleAdmin: "–ê–¥–º–∏–Ω",
    roleJudge: "–®“Ø“Ø–≥—á",
    roleViewer: "“Æ–∑—ç–≥—á",
    unknownUser: "–¢–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π –•—ç—Ä—ç–≥–ª—ç–≥—á",
    unknownRole: "–¢–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π –î“Ø—Ä",
    login: "–ù—ç–≤—Ç—Ä—ç—Ö",
  },
  ja: {
    welcome: '{name}„Åï„Çì„ÄÅ„Åä„Åã„Åà„Çä„Å™„Åï„ÅÑÔºÅ',
    dashboardSubtitle: '‰ªäÊó•„ÅÆ„ÅÇ„Å™„Åü„ÅÆ„Ç≥„É≥„Éö„ÉÜ„Ç£„Ç∑„Éß„É≥„ÅÆÁä∂Ê≥Å„ÅØ„Åì„Å°„Çâ„Åß„Åô„ÄÇ',
    activeCompetitions: '„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™„Ç≥„É≥„Éö„ÉÜ„Ç£„Ç∑„Éß„É≥',
    totalJudges: 'Á∑èÂØ©ÊüªÂì°Êï∞',
    submissionsToday: '‰ªäÊó•„ÅÆÊèêÂá∫Êï∞',
    averageScore: 'Âπ≥Âùá„Çπ„Ç≥„Ç¢',
    noCompetitions: 'Âà©Áî®ÂèØËÉΩ„Å™„Ç≥„É≥„Éö„ÉÜ„Ç£„Ç∑„Éß„É≥„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ',
    selectLanguage: 'Ë®ÄË™û„ÇíÈÅ∏Êäû',
    retry: 'ÂÜçË©¶Ë°å',
    comingSoon: '„Åï„Çâ„Å´Â§ö„Åè„ÅÆ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„ÉâÊ©üËÉΩ„ÅåËøëÊó•ÂÖ¨Èñã‰∫àÂÆö„Åß„ÅôÔºÅ',
    participants: 'ÂèÇÂä†ËÄÖ',
    judges: 'ÂØ©ÊüªÂì°',
    ends: 'ÁµÇ‰∫Ü',
    back: 'Êàª„Çã',
    judgePanel: 'ÂØ©ÊüªÂì°„Éë„Éç„É´',
    welcomeJudge: '{name}„Åï„Çì„ÄÅÂØ©ÊüªÂì°„Å∏„Çà„ÅÜ„Åì„ÅùÔºÅ',
    competition: '„Ç≥„É≥„Éö„ÉÜ„Ç£„Ç∑„Éß„É≥',
    upcoming: 'ËøëÊó•‰∏≠„ÅÆ',
    timeTBD: 'ÊôÇÈñìÊú™ÂÆö',
    noPerformance: '„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„Å™„Åó',
    scoring: '„Çπ„Ç≥„Ç¢„É™„É≥„Ç∞',
    totalScore: 'ÂêàË®à„Çπ„Ç≥„Ç¢',
    criteria_criteria1: 'Âü∫Ê∫ñ1',
    criteria_criteria2: 'Âü∫Ê∫ñ2',
    criteria_criteria3: 'Âü∫Ê∫ñ3',
    weight: '„Ç¶„Çß„Ç§„ÉàÔºö{value}',
    scoreLabel: '„Çπ„Ç≥„Ç¢',
    poor: 'ÊÇ™„ÅÑ',
    average: 'Âπ≥Âùá',
    excellent: 'ÂÑ™„Çå„Å¶„ÅÑ„Çã',
    commentsLabel: '„Ç≥„É°„É≥„Éà',
    commentPlaceholder: '{criteria}„Å´Èñ¢„Åô„Çã„Ç≥„É°„É≥„Éà„ÇíËøΩÂä†',
    clearScores: '„Çπ„Ç≥„Ç¢„Çí„ÇØ„É™„Ç¢',
    submitScores: '„Çπ„Ç≥„Ç¢„ÇíÈÄÅ‰ø°',
    leaderboard: "„É™„Éº„ÉÄ„Éº„Éú„Éº„Éâ",
    realTimeCompetitionResults: "„É™„Ç¢„É´„Çø„Ç§„É†„ÅÆÁ´∂ÊäÄÁµêÊûú",
    live: "„É©„Ç§„Éñ",
    refresh: "Êõ¥Êñ∞",
    selectEvent: "„Ç§„Éô„É≥„Éà„ÇíÈÅ∏Êäû",
    progress: "ÈÄ≤Êçó",
    completed: "ÂÆå‰∫Ü",
    totalTeams: "Á∑è„ÉÅ„Éº„É†Êï∞",
    judged: "ÂØ©ÊüªÊ∏à„Åø",
    hackathon2023Rankings: "„Éè„ÉÉ„Ç´„ÇΩ„É≥2023„É©„É≥„Ç≠„É≥„Ç∞",
    devSprint2025Rankings: "„Éá„Éñ„Çπ„Éó„É™„É≥„Éà2025„É©„É≥„Ç≠„É≥„Ç∞",
    aiChallenge2024Rankings: "AI„ÉÅ„É£„É¨„É≥„Ç∏2024„É©„É≥„Ç≠„É≥„Ç∞",
    team: "„ÉÅ„Éº„É†",
    performance: "„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ",
    waitingForMoreTeams: "{count}„ÉÅ„Éº„É†„ÅÆÂØ©Êüª„ÇíÂæÖ„Å£„Å¶„ÅÑ„Åæ„Åô...",
    unknown: "‰∏çÊòé",
    failedFetchCompetitions: "Á´∂ÊäÄ„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„ÅüÔºö{status}",
    failedFetchScoreboard: "„Çπ„Ç≥„Ç¢„Éú„Éº„Éâ„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„ÅüÔºö{status}",
    invalidResponseFormat: "ÁÑ°Âäπ„Å™„É¨„Çπ„Éù„É≥„ÇπÂΩ¢Âºè",
    noCompetitionsAvailable: "Âà©Áî®ÂèØËÉΩ„Å™Á´∂ÊäÄ„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì",
    noScoresAvailable: "„Çπ„Ç≥„Ç¢„Åå„ÅÇ„Çä„Åæ„Åõ„Çì",
    errorTitle: "„Ç®„É©„Éº",
    unknownError: "‰∏çÊòé„Å™„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü",
    backToDashboard: "„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å´Êàª„Çã",
    competitionManagement: "Á´∂ÊäÄÁÆ°ÁêÜ",
    manageExistingCompetitions: "Êó¢Â≠ò„ÅÆÁ´∂ÊäÄ„ÇíÁÆ°ÁêÜ",
    allCompetitions: "„Åô„Åπ„Å¶„ÅÆÁ´∂ÊäÄ",
    createCompetition: "Á´∂ÊäÄ„Çí‰ΩúÊàê",
    hackathon2023: "„Éè„ÉÉ„Ç´„ÇΩ„É≥2023",
    annualCodingCompetition: "Âπ¥Ê¨°„Ç≥„Éº„Éá„Ç£„É≥„Ç∞Á´∂ÊäÄ",
    devSprint2025: "„Éá„Éñ„Çπ„Éó„É™„É≥„Éà2025",
    rapidSoftwareDevContest: "24ÊôÇÈñìÈ´òÈÄü„ÇΩ„Éï„Éà„Ç¶„Çß„Ç¢ÈñãÁô∫„Ç≥„É≥„ÉÜ„Çπ„Éà",
    aiChallenge2024: "AI„ÉÅ„É£„É¨„É≥„Ç∏2024",
    buildInnovativeAIModels: "Èù©Êñ∞ÁöÑ„Å™AI„É¢„Éá„É´„ÇíÊßãÁØâ",
    viewDetails: "Ë©≥Á¥∞„ÇíË¶ã„Çã",
    backToList: "„É™„Çπ„Éà„Å´Êàª„Çã",
    createNewCompetition: "Êñ∞„Åó„ÅÑÁ´∂ÊäÄ„Çí‰ΩúÊàê",
    competitionName: "Á´∂ÊäÄÂêç",
    status: "„Çπ„ÉÜ„Éº„Çø„Çπ",
    description: "Ë™¨Êòé",
    startDate: "ÈñãÂßãÊó•",
    endDate: "ÁµÇ‰∫ÜÊó•",
    judgingCriteria: "ÂØ©ÊüªÂü∫Ê∫ñ",
    addCriteria: "Âü∫Ê∫ñ„ÇíËøΩÂä†",
    criterionName: "Âü∫Ê∫ñÂêç",
    addParticipant: "ÂèÇÂä†ËÄÖ„ÇíËøΩÂä†",
    addJudge: "ÂØ©ÊüªÂì°„ÇíËøΩÂä†",
    judgeName: "ÂØ©ÊüªÂì°Âêç",
    judgeEmail: "ÂØ©ÊüªÂì°„É°„Éº„É´",
    totalWeight: "ÂêàË®à„Ç¶„Çß„Ç§„ÉàÔºö{value}%",
    totalMustBe100: "ÂêàË®à„ÅØ100%„Åß„Å™„Åë„Çå„Å∞„Å™„Çä„Åæ„Åõ„Çì",
    noCompetitionsYet: "„Åæ„Å†Á´∂ÊäÄ„Åå„ÅÇ„Çä„Åæ„Åõ„Çì",
    getStartedCreateCompetition: "Êñ∞„Åó„ÅÑÁ´∂ÊäÄ„Çí‰ΩúÊàê„Åó„Å¶Âßã„ÇÅ„Åæ„Åó„Çá„ÅÜ",
    accessDenied: "„Ç¢„ÇØ„Çª„ÇπÊãíÂê¶",
    onlyAdmins: "„Åì„ÅÆ„Éö„Éº„Ç∏„Å´„ÅØÁÆ°ÁêÜËÄÖ„ÅÆ„Åø„Ç¢„ÇØ„Çª„ÇπÂèØËÉΩ„Åß„Åô",
    invalidInput: "ÁÑ°Âäπ„Å™ÂÖ•Âäõ",
    competitionNameRequired: "Á´∂ÊäÄÂêç„ÅåÂøÖË¶Å„Åß„Åô",
    invalidCriteria: "ÁÑ°Âäπ„Å™Âü∫Ê∫ñ",
    criteriaNameWeightRequired: "ÂêÑÂü∫Ê∫ñ„Å´„ÅØÂêçÂâç„Å®0„Çà„ÇäÂ§ß„Åç„ÅÑ„Ç¶„Çß„Ç§„Éà„ÅåÂøÖË¶Å„Åß„Åô",
    totalWeightMustBe100: "Âü∫Ê∫ñ„ÅÆÂêàË®à„Ç¶„Çß„Ç§„Éà„ÅØ100%„Åß„Å™„Åë„Çå„Å∞„Å™„Çä„Åæ„Åõ„Çì",
    invalidDates: "ÁÑ°Âäπ„Å™Êó•‰ªò",
    startDateBeforeEndDate: "ÈñãÂßãÊó•„ÅØÁµÇ‰∫ÜÊó•„Çà„ÇäÂâç„Åß„Å™„Åë„Çå„Å∞„Å™„Çä„Åæ„Åõ„Çì",
    validDatesRequired: "ÊúâÂäπ„Å™ÈñãÂßãÊó•„Å®ÁµÇ‰∫ÜÊó•„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    participantNameRequired: "ÂèÇÂä†ËÄÖÂêç„ÅåÂøÖË¶Å„Åß„Åô",
    judgeNameEmailRequired: "ÂØ©ÊüªÂì°Âêç„Å®„É°„Éº„É´„ÅåÂøÖË¶Å„Åß„Åô",
    invalidEmail: "ÊúâÂäπ„Å™„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    cannotRemove: "ÂâäÈô§„Åß„Åç„Åæ„Åõ„Çì",
    atLeastOneCriterion: "Â∞ë„Å™„Åè„Å®„ÇÇ1„Å§„ÅÆÂü∫Ê∫ñ„ÅåÂøÖË¶Å„Åß„Åô",
    success: "ÊàêÂäü",
    competitionCreated: "Á´∂ÊäÄ„ÅåÊ≠£Â∏∏„Å´‰ΩúÊàê„Åï„Çå„Åæ„Åó„ÅüÔºÅ",
    competitionDeleted: "Á´∂ÊäÄ„ÅåÊ≠£Â∏∏„Å´ÂâäÈô§„Åï„Çå„Åæ„Åó„ÅüÔºÅ",
    error: "„Ç®„É©„Éº",
    couldNotCreateCompetition: "Á´∂ÊäÄ„Çí‰ΩúÊàê„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü",
    couldNotDeleteCompetition: "Á´∂ÊäÄ„ÇíÂâäÈô§„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü",
    confirmDelete: "„Åì„ÅÆÁ´∂ÊäÄ„ÇíÂâäÈô§„Åó„Å¶„ÇÇ„Çà„Çç„Åó„ÅÑ„Åß„Åô„ÅãÔºü",
    unnamedCompetition: "ÁÑ°Âêç„ÅÆÁ´∂ÊäÄ",
    unnamedParticipant: "ÁÑ°Âêç„ÅÆÂèÇÂä†ËÄÖ",
    unnamedJudge: "ÁÑ°Âêç„ÅÆÂØ©ÊüªÂì°",
    noDescription: "Ë™¨Êòé„Åå„ÅÇ„Çä„Åæ„Åõ„Çì",
    enterCompetitionName: "Á´∂ÊäÄÂêç„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    enterDescription: "Á´∂ÊäÄ„ÅÆË™¨Êòé„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    enterParticipantName: "ÂèÇÂä†ËÄÖÂêç„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    enterJudgeName: "ÂØ©ÊüªÂì°Âêç„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    enterJudgeEmail: "ÂØ©ÊüªÂì°„ÅÆ„É°„Éº„É´„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    enterCriterionName: "Âü∫Ê∫ñÂêç„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    deleteCompetition: "Á´∂ÊäÄ„ÇíÂâäÈô§",
    dashboard: "„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ",
    judge: "ÂØ©Êüª",
    scoreboard: "„Çπ„Ç≥„Ç¢„Éú„Éº„Éâ",
    competitions: "Á´∂ÊäÄ",
    profile: "„Éó„É≠„Éï„Ç£„Éº„É´",
    logout: "„É≠„Ç∞„Ç¢„Ç¶„Éà",
    toggleMenu: "„É°„Éã„É•„Éº„ÇíÂàá„ÇäÊõø„Åà",
    closeMenu: "„É°„Éã„É•„Éº„ÇíÈñâ„Åò„Çã",
    openMenu: "„É°„Éã„É•„Éº„ÇíÈñã„Åè",
    profileImageAlt: "„Éó„É≠„Éï„Ç£„Éº„É´ÁîªÂÉè",
    logoAlt: "„Ç∏„É£„ÉÉ„Ç∏„Éè„Éñ„ÅÆ„É≠„Ç¥",
    roleAdmin: "ÁÆ°ÁêÜËÄÖ",
    roleJudge: "ÂØ©ÊüªÂì°",
    roleViewer: "Èñ≤Ë¶ßËÄÖ",
    unknownUser: "‰∏çÊòé„Å™„É¶„Éº„Ç∂„Éº",
    unknownRole: "‰∏çÊòé„Å™ÂΩπÂâ≤",
    login: "„É≠„Ç∞„Ç§„É≥",
  },
};


interface LanguageContextType {
  currentLanguage: string;
  setLanguage: (languageCode: string) => void;
  t: (key: string, params?: Record<string, string>) => string;
  getCurrentLanguage: () => Language;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const LanguageProvider: React.FC<{ children: ReactNode }> = ({ children }) => {
  // Initialize from localStorage or default to 'en'
  const [currentLanguage, setCurrentLanguage] = useState(() => {
    if (typeof window !== 'undefined') {
      return localStorage.getItem('language') || 'en';
    }
    return 'en';
  });

  const setLanguage = (languageCode: string) => {
    setCurrentLanguage(languageCode);
    // Save to localStorage
    if (typeof window !== 'undefined') {
      localStorage.setItem('language', languageCode);
    }
  };

  const t = (key: string, params?: Record<string, string>): string => {
    let text = translations[currentLanguage]?.[key] || translations['en'][key] || key;
    if (params) {
      Object.keys(params).forEach((param) => {
        text = text.replace(`{${param}}`, params[param]);
      });
    }
    return text;
  };

  const getCurrentLanguage = (): Language => {
    return languages.find((lang) => lang.code === currentLanguage) || languages[0];
  };

  return (
    <LanguageContext.Provider value={{ currentLanguage, setLanguage, t, getCurrentLanguage }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = (): LanguageContextType => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};